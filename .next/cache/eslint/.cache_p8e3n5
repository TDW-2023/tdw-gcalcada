[{"C:\\tdw-gcalcada\\app\\layout.tsx":"1","C:\\tdw-gcalcada\\app\\page.tsx":"2","C:\\tdw-gcalcada\\app\\Tests\\sum.js":"3","C:\\tdw-gcalcada\\app\\Tests\\sum.test.js":"4","C:\\tdw-gcalcada\\app\\Team\\page.tsx":"5","C:\\tdw-gcalcada\\app\\Tests\\data.js":"6","C:\\tdw-gcalcada\\app\\Tests\\data.test.js":"7"},{"size":2551,"mtime":1697691644183,"results":"8","hashOfConfig":"9"},{"size":122,"mtime":1697727517888,"results":"10","hashOfConfig":"9"},{"size":63,"mtime":1697691644182,"results":"11","hashOfConfig":"9"},{"size":104,"mtime":1697691644182,"results":"12","hashOfConfig":"9"},{"size":1299,"mtime":1697691644181,"results":"13","hashOfConfig":"9"},{"size":3599,"mtime":1697691644181,"results":"14","hashOfConfig":"9"},{"size":1034,"mtime":1697691644182,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","suppressedMessages":"18","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19"},"1hc35ba",{"filePath":"20","messages":"21","suppressedMessages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"23","messages":"24","suppressedMessages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","suppressedMessages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32"},{"filePath":"33","messages":"34","suppressedMessages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\tdw-gcalcada\\app\\layout.tsx",["39"],[],"'use client' // This is a client component üëàüèΩ\r\n\r\nimport React, { useState, useEffect } from 'react'\r\n\r\nimport './globals.css'\r\nimport Link from 'next/link'\r\n\r\nexport default function RootLayout({\r\n  children,\r\n}: {\r\n  children: React.ReactNode\r\n}) {\r\n  const [isDarkMode, setIsDarkMode] = useState(false)\r\n\r\n  return (\r\n    <html lang=\"en\">\r\n      <head></head>\r\n      <body className={isDarkMode ? 'dark' : 'light'}>\r\n        <nav className=\"bg-white\">\r\n          <div className=\"mx-auto max-w-7xl px-2 sm:px-6 lg:px-8\">\r\n            <div className=\"relative flex h-40 items-center justify-between\">\r\n              <div className=\"flex flex-1 items-center justify-center sm:items-stretch sm:justify-start\">\r\n                <div className=\"flex flex-shrink-0 items-center\">\r\n                  <Link href={'/'}>\r\n                    {' '}\r\n                    <img\r\n                      className=\"h-20 w-20\"\r\n                      src=\"https://upload.wikimedia.org/wikipedia/en/thumb/e/eb/Manchester_City_FC_badge.svg/1200px-Manchester_City_FC_badge.svg.png\"\r\n                      alt=\"Man City\"\r\n                    ></img>\r\n                  </Link>\r\n                </div>\r\n                <div className=\"hidden sm:ml-20 p-7 sm:block\">\r\n                  <div className=\"flex space-x-8\">\r\n                    <Link\r\n                      href={'/'}\r\n                      className=\"text-black hover:bg-gray-700 hover:text-white rounded-md px-3 py-2 text-3xl font-medium\"\r\n                    >\r\n                      Home\r\n                    </Link>\r\n                    <Link\r\n                      href={'/Team'}\r\n                      className=\"text-black hover:bg-gray-700 hover:text-white rounded-md px-3 py-2 text-3xl font-medium\"\r\n                    >\r\n                      Team\r\n                    </Link>\r\n                    <a\r\n                      href=\"#\"\r\n                      className=\"text-black hover:bg-gray-700 hover:text-white rounded-md px-3 py-2 text-3xl font-medium\"\r\n                    >\r\n                      Projects\r\n                    </a>\r\n                    <a\r\n                      href=\"#\"\r\n                      className=\"text-black hover:bg-gray-700 hover:text-white rounded-md px-3 py-2 text-3xl font-medium\"\r\n                    >\r\n                      Calendar\r\n                    </a>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </nav>\r\n\r\n        <main>{children}</main>\r\n      </body>\r\n    </html>\r\n  )\r\n}\r\n","C:\\tdw-gcalcada\\app\\page.tsx",[],[],"C:\\tdw-gcalcada\\app\\Tests\\sum.js",[],[],"C:\\tdw-gcalcada\\app\\Tests\\sum.test.js",[],[],"C:\\tdw-gcalcada\\app\\Team\\page.tsx",["40"],[],"import players from '../Tests/data'\r\n\r\nexport default function index() {\r\n  return (\r\n    <main className=\"flex min-h-screen flex-col items-baseline justify-between p-24\">\r\n      <div className=\"flex flex-wrap -mx-4\">\r\n        {players.map((player, index) => (\r\n          <div key={index} className=\"pl-20 pt-4 mt-10 justify-center\">\r\n            <div className=\"max-w-sm rounded overflow-hidden shadow-lg\">\r\n              <img className=\"w-96 h-96\" src={player.image} alt={player.name} />\r\n              <div className=\"px-6 py-4\">\r\n                <div className=\"font-bold text-xl mb-2\">{player.name}</div>\r\n                <p className=\"text-gray-700 text-base\">{player.description}</p>\r\n              </div>\r\n              <div className=\"px-6 pt-4 pb-2\">\r\n                <div className=\"flex flex-wrap\">\r\n                  {player.tags.map((tag, tagIndex) => (\r\n                    <span\r\n                      key={tagIndex}\r\n                      className=\"inline-block bg-gray-200 rounded-full px-3 py-1 text-sm font-semibold text-gray-700 mr-2 mb-2\"\r\n                    >\r\n                      {tag}\r\n                    </span>\r\n                  ))}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </main>\r\n  )\r\n}\r\n","C:\\tdw-gcalcada\\app\\Tests\\data.js",[],[],"C:\\tdw-gcalcada\\app\\Tests\\data.test.js",[],[],{"ruleId":"41","severity":1,"message":"42","line":26,"column":21,"nodeType":"43","endLine":30,"endColumn":22},{"ruleId":"41","severity":1,"message":"42","line":10,"column":15,"nodeType":"43","endLine":10,"endColumn":81},"@next/next/no-img-element","Using `<img>` could result in slower LCP and higher bandwidth. Consider using `<Image />` from `next/image` to automatically optimize images. This may incur additional usage or cost from your provider. See: https://nextjs.org/docs/messages/no-img-element","JSXOpeningElement"]